
///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УправлениеФормой(ЭтаФорма);	
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	Если ТекущийОбъект.Использование Тогда
		Версия = Компоненты.ВерсияКомпоненты(ТекущийОбъект.Ссылка);
	КонецЕсли;
	
	ОбновитьСписокЛоговНаСервере();
		
КонецПроцедуры

#КонецОбласти


///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ИспользованиеПриИзменении(Элемент)
	
	Если Объект.Использование Тогда
		Версия = КомпонентыВызовСервера.ВерсияКомпоненты(
			Новый Структура("Хост, Порт", Объект.Хост, Объект.Порт));
	Иначе
		Версия = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОчиститьЛог(Команда)
	
	ТекущиеДанные = Элементы.Логи.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ПоказатьВопрос(
			Новый ОписаниеОповещения("ОчиститьЛог_ПослеВыбораОтвета", ЭтотОбъект, 
				Новый Структура("Компонента, Лог", Объект.Ссылка, ТекущиеДанные.Лог)),
			СтрШаблон(
				НСтр("ru = 'Будет выполнено удаление содержимого лога (%1). Продолжить?'"),
					ТекущиеДанные.Лог),
			РежимДиалогаВопрос.ДаНет);
	Иначе
		ПоказатьПредупреждение(, НСтр("ru = 'Для удаления содержимого необходимо выбрать нужный лог'"));	
	КонецЕсли;
			
КонецПроцедуры

&НаКлиенте
Процедура ПросмотретьЛог(Команда)
	
	ТекущиеДанные = Элементы.Логи.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ОткрытьФорму("Обработка.ПросмотрЛогов.Форма.Форма", 
			Новый Структура("Компонента, Лог", Объект.Ссылка, ТекущиеДанные.Лог));
		
	Иначе
		ПоказатьПредупреждение(, НСтр("ru = 'Для просмотра содержимого необходимо выбрать нужный лог'"));	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписокЛогов(Команда)
	
	ОбновитьСписокЛоговНаСервере();
	
КонецПроцедуры

#КонецОбласти


///////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

#Область ПрограммныйИнтерфейс

&НаКлиенте
Процедура ОчиститьЛог_ПослеВыбораОтвета(Результат, ДополнительныеПараметры) Экспорт
	
	ОписаниеОшибки = Неопределено;
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ТекстОшибки = Неопределено;
		Результат = ОчиститьЛогНаСервере(ДополнительныеПараметры.Компонента,
			ДополнительныеПараметры.Лог,
			ТекстОшибки);
			
		Если Результат Тогда
			ПоказатьПредупреждение(, НСтр("ru = 'Операция выполнена успешно'"));
		Иначе
			ПоказатьПредупреждение(, 
				СтрШаблон(
					НСтр("ru = 'В процессе удаления содержимого возникла ошибка: %1'"), ТекстОшибки));
		КонецЕсли;
	КонецЕсли;
			
КонецПроцедуры

#КонецОбласти


///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(ЭтаФорма)
	
КонецПроцедуры

&НаСервере
Функция ОчиститьЛогНаСервере(Компонента, Лог, ОписаниеОшибки) 
	
	Результат = Ложь;
	ОписаниеОшибки = Неопределено;
	
	Попытка
		Компоненты.ОчиститьВсеСообщения(Компонента, Лог);			
		Результат = Истина;
	Исключение
		ОписаниеОшибки = ОписаниеОшибки();
	КонецПопытки;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ОбновитьСписокЛоговНаСервере()
	
	Логи.Очистить();
	
	ЛогиКомпоненты = Компоненты.ЛогиКомпоненты(Объект.Ссылка);
	Для Каждого Лог Из ЛогиКомпоненты Цикл
		НоваяСтрока = Логи.Добавить();
		НоваяСтрока.Лог = Лог;
	КонецЦикла;	
	
	Логи.Сортировать("Лог ВОЗР");
		
КонецПроцедуры

#КонецОбласти